version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

parameters:
  tag:
    default: latest
    description: 
      A comma-separated string containing docker image tags to build and push
      (default = latest)
    type: string


jobs:
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: tests/nginx-deployment/deployment.yaml
          resource-name: deployment/nginx-deployment

workflows:
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          # context: myContext
          create-repo: true
          dockerfile: Dockerfile
          no-output-timeout: 20m
          path: ~
          profile-name: html
          region: AWS_REGION
          repo: myecrrepository
          skip-when-tags-exist: false
          tag: v1.0

      
      - aws-eks/create-cluster:
          cluster-name: eks-demo-deployment
      - create-deployment:
          cluster-name: eks-demo-deployment
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: eks-demo-deployment
          container-image-updates: 'nginx=nginx:1.9.1'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: nginx-deployment
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-name: deployment/nginx-deployment
      #- aws-eks/delete-cluster:
          # cluster-name: eks-demo-deployment
          # requires:
          #   - aws-eks/update-container-image